{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nclass PagamentosService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/Pagamento/CadastroPagamento'; // Mantenha o caminho do backend\n  }\n\n  listar() {\n    return this.http.get(`${this.apiUrl}/listar`);\n  }\n  buscar(id) {\n    return this.http.get(`${this.apiUrl}/buscar/${id}`);\n  }\n  cadastrar(certificadora) {\n    return this.http.post(`${this.apiUrl}/cadastrar`, certificadora, httpOptions);\n  }\n  atualizar(certificadora) {\n    return this.http.put(`${this.apiUrl}/atualizar`, certificadora, httpOptions);\n  }\n  excluir(id) {\n    return this.http.delete(`${this.apiUrl}/excluir/${id}`, httpOptions);\n  }\n  static #_ = this.ɵfac = function PagamentosService_Factory(t) {\n    return new (t || PagamentosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PagamentosService,\n    factory: PagamentosService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { PagamentosService };","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","PagamentosService","constructor","http","apiUrl","listar","get","buscar","id","cadastrar","certificadora","post","atualizar","put","excluir","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Faculdade\\Design de software\\MpCertificadoVrs2\\MpCertificadoVrs2\\AppCertificado\\src\\app\\pagamentos.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Pagamento } from './Pagamento'; // Importe a classe Certificadora\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagamentosService {\n  private apiUrl = 'http://localhost:5000/Pagamento/CadastroPagamento'; // Mantenha o caminho do backend\n\n  constructor(private http: HttpClient) { }\n\n  listar(): Observable<Pagamento[]> {\n    return this.http.get<Pagamento[]>(`${this.apiUrl}/listar`);\n  }\n\n  buscar(id: string): Observable<Pagamento> {\n    return this.http.get<Pagamento>(`${this.apiUrl}/buscar/${id}`);\n  }\n\n  cadastrar(certificadora: Pagamento): Observable<any> {\n    return this.http.post<Pagamento>(`${this.apiUrl}/cadastrar`, certificadora, httpOptions);\n  }\n\n  atualizar(certificadora: Pagamento): Observable<any> {\n    return this.http.put<Pagamento>(`${this.apiUrl}/atualizar`, certificadora, httpOptions);\n  }\n\n  excluir(id: string): Observable<any> {\n    return this.http.delete<string>(`${this.apiUrl}/excluir/${id}`, httpOptions);\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAED,MAGaG,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,mDAAmD,CAAC,CAAC;EAE9B;;EAExCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,MAAM,SAAS,CAAC;EAC5D;EAEAG,MAAMA,CAACC,EAAU;IACf,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,WAAWI,EAAE,EAAE,CAAC;EAChE;EAEAC,SAASA,CAACC,aAAwB;IAChC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAY,GAAG,IAAI,CAACP,MAAM,YAAY,EAAEM,aAAa,EAAEX,WAAW,CAAC;EAC1F;EAEAa,SAASA,CAACF,aAAwB;IAChC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAY,GAAG,IAAI,CAACT,MAAM,YAAY,EAAEM,aAAa,EAAEX,WAAW,CAAC;EACzF;EAEAe,OAAOA,CAACN,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAS,GAAG,IAAI,CAACX,MAAM,YAAYI,EAAE,EAAE,EAAET,WAAW,CAAC;EAC9E;EAAC,QAAAiB,CAAA,G;qBAvBUf,iBAAiB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBpB,iBAAiB;IAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;IAAAC,UAAA,EAFhB;EAAM;;SAEPvB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}