{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nclass AnunciosService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/MpCertificadoAnuncio/CertificadoAnuncio/cadastrar';\n  }\n  listar() {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get(url);\n  }\n  buscar(id) {\n    const url = `${this.apiUrl}/buscar/${id}`;\n    return this.http.get(url);\n  }\n  cadastrar(anuncio) {\n    const url = `${this.apiUrl}/cadastrar`;\n    return this.http.post(url, anuncio, httpOptions);\n  }\n  atualizar(anuncio) {\n    const url = `${this.apiUrl}/atualizar`;\n    return this.http.put(url, anuncio, httpOptions);\n  }\n  excluir(id) {\n    const url = `${this.apiUrl}/buscar/${id}`;\n    return this.http.delete(url, httpOptions);\n  }\n  static #_ = this.ɵfac = function AnunciosService_Factory(t) {\n    return new (t || AnunciosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnunciosService,\n    factory: AnunciosService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AnunciosService };","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","AnunciosService","constructor","http","apiUrl","listar","url","get","buscar","id","cadastrar","anuncio","post","atualizar","put","excluir","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Faculdade\\Design de software\\MpCertificadoVrs2\\MpCertificadoVrs2\\AppCertificado\\src\\app\\anuncios.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Anuncio } from './Anuncio';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnunciosService {\n  apiUrl = 'http://localhost:5000/MpCertificadoAnuncio/CertificadoAnuncio/cadastrar';\n  constructor(private http: HttpClient) { }\n\n  listar(): Observable<Anuncio[]> {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get<Anuncio[]>(url);\n  }\n\n  buscar(id: string): Observable<Anuncio> {\n    const url = `${this.apiUrl}/buscar/${id}`;\n    return this.http.get<Anuncio>(url);\n  }\n\n  cadastrar(anuncio: Anuncio): Observable<any> {\n    const url = `${this.apiUrl}/cadastrar`;\n    return this.http.post<Anuncio>(url, anuncio, httpOptions);\n  }\n\n  atualizar(anuncio: Anuncio): Observable<any> {\n    const url = `${this.apiUrl}/atualizar`;\n    return this.http.put<Anuncio>(url, anuncio, httpOptions);\n  }\n\n  excluir(id: string): Observable<any> {\n    const url = `${this.apiUrl}/buscar/${id}`;\n    return this.http.delete<string>(url, httpOptions);\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAED,MAGaG,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,MAAM,GAAG,yEAAyE;EAC1C;EAExCC,MAAMA,CAAA;IACJ,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAAS;IACnC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC;EACtC;EAEAE,MAAMA,CAACC,EAAU;IACf,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWK,EAAE,EAAE;IACzC,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAUD,GAAG,CAAC;EACpC;EAEAI,SAASA,CAACC,OAAgB;IACxB,MAAML,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAY;IACtC,OAAO,IAAI,CAACD,IAAI,CAACS,IAAI,CAAUN,GAAG,EAAEK,OAAO,EAAEZ,WAAW,CAAC;EAC3D;EAEAc,SAASA,CAACF,OAAgB;IACxB,MAAML,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAY;IACtC,OAAO,IAAI,CAACD,IAAI,CAACW,GAAG,CAAUR,GAAG,EAAEK,OAAO,EAAEZ,WAAW,CAAC;EAC1D;EAEAgB,OAAOA,CAACN,EAAU;IAChB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWK,EAAE,EAAE;IACzC,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAASV,GAAG,EAAEP,WAAW,CAAC;EACnD;EAAC,QAAAkB,CAAA,G;qBA3BUhB,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfrB,eAAe;IAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAEPxB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}